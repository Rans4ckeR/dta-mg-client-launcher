name: Publish
on:
  workflow_dispatch:
permissions:
  contents: write
jobs:
  publish:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
        - assemblyname: 'CnCNet.LauncherStub'
          iconurl: ''
        - assemblyname: 'CnCNetYRLauncher'
          iconurl: 'https://raw.githubusercontent.com/CnCNet/cncnet-yr-client-package/develop/package/Resources/clienticon.ico'
        - assemblyname: 'DTA'
          iconurl: 'https://raw.githubusercontent.com/Rampastring/dta-xna-cncnet-client/master/DXMainClient/clienticon.ico'
        - assemblyname: 'REClient'
          iconurl: 'https://www.riseoftheeastmod.com/updates/Resources/clienticon.ico'
        - assemblyname: 'TiberianSun'
          iconurl: 'https://raw.githubusercontent.com/CnCNet/cncnet-ts-client-package/master/Resources/clienticon.ico'
        - assemblyname: 'TiberianDawn'
          iconurl: 'https://cdn.discordapp.com/attachments/1051967431020654622/1051967960857718825/TiberianDawn.ico'
        - assemblyname: 'SoleSurvivor'
          iconurl: 'https://cdn.discordapp.com/attachments/1051967431020654622/1051967960098549851/tomsons_SoleIcon.ico'
        - assemblyname: 'TwistedInsurrection'
          iconurl: 'https://ti.ppmsite.com/updates/Resources/clienticon.ico'
        - assemblyname: 'MentalOmegaClient'
          iconurl: 'https://mentalomega.com/game/update/Resources/clienticon.ico'
        - assemblyname: 'RRLauncher'
          iconurl: 'https://cdn.discordapp.com/attachments/194153198284570624/1085518962256777276/redresurrection.ico'
        - assemblyname: 'CnCReloadedClient'
          iconurl: 'https://cncreloaded.com/cncr_updates/Resources/clienticon.ico'
        - assemblyname: 'RedAlert'
          iconurl: 'https://cdn.discordapp.com/attachments/1051967431020654622/1051967960480239766/RedAlert.ico'
        - assemblyname: 'Dune2000'
          iconurl: 'https://cdn.discordapp.com/attachments/1051967431020654622/1051967961172295700/dune2000.ico'
        - assemblyname: 'The Second Tiberium War'
          iconurl: 'https://cdn.discordapp.com/attachments/194153198284570624/1085515125634629762/The_Second_Tiberium_War.ico'
        - assemblyname: 'FWLauncher'
          iconurl: 'https://cdn.discordapp.com/attachments/194153198284570624/1085517782575235092/finalwar.ico'
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Set Icon
        if: ${{ matrix.iconurl != '' }}
        run: curl ${{ matrix.iconurl }} -o mainclienticon.ico
          
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: '7.x.x'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@main
        with:
          versionSpec: '5.x'

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@main

      - name: Publish With Icon
        if: ${{ matrix.iconurl != '' }}
        run: dotnet publish --configuration Release --no-self-contained -p:PublishSingleFile=true -r win-x86 -p:DebugType=embedded -p:AssemblyName="${{ matrix.assemblyname }}" -p:ApplicationIcon=mainclienticon.ico -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion

      - name: Publish Without Icon
        if: ${{ matrix.iconurl == '' }}
        run: dotnet publish --configuration Release --no-self-contained -p:PublishSingleFile=true -r win-x86 -p:DebugType=embedded -p:AssemblyName="${{ matrix.assemblyname }}" -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: ${{ format('{0}-v{1}-net7.0-windows-x86.zip', matrix.assemblyname, env.GitVersion_SemVer) }}
          path: ./bin/Release/net7.0-windows/win-x86/publish/*.*
          if-no-files-found: error
  
  release:
    needs: publish
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@main
        with:
          versionSpec: '5.x'

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@main

      - name: Download Artifact
        uses: actions/download-artifact@main

      - name: Prerelease
        if: ${{ env.GitVersion_PreReleaseTag != '' }}
        run: gh release create ${{ format('v{0}', env.GitVersion_SemVer) }} (get-item .\*\*\*.zip) --generate-notes --target ${{ github.sha }} --prerelease
        env:
          GH_TOKEN: ${{ github.token }}
          
      - name: Release
        if: ${{ env.GitVersion_PreReleaseTag == '' }}
        run: gh release create ${{ format('v{0}', env.GitVersion_SemVer) }} (get-item .\*\*\*.zip) --generate-notes --target ${{ github.sha }}
        env:
          GH_TOKEN: ${{ github.token }}